// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        String    @id @unique @default(uuid())
  // 用户ID                不能重复  默认为UUID
  username  String    @unique @map("user_name")
  // 用户名           不能重复 @map表示为字段定义别名
  phone     String?   @unique
  // 手机号
  email     String?   @unique @default("")
  // 邮箱
  address   String?   @default("")
  // 地址
  gender    String?   @default("")
  // 性别
  score     Int?
  // 分数
  exams     exam[]
  createAt  DateTime  @default(now()) @map("create_at")
  // 创建时间
  updateAt  DateTime  @updatedAt @map("update_at")
  // 更新时间
  deleted   Boolean   @default(false)
  // 是否删除
  deletedAt DateTime? @map("deleted_at")
  // 删除时间

  @@map("users")
}

// 文件模型
model exam {
  id             String   @id @unique @default(uuid())
  // 建立表的关联关系
  email          String?  @default("")
  phone          String?
  score          Int?
  // 作者ID 关联用户的ID
  user           user?    @relation(fields: [examineeId], references: [id])
  examineeId     String   @default("") @map("examinee_id")
  choosedChoices String?  @map("choosed_choices")
  tag            String
  createAt       DateTime @default(now()) @map("create_at")
  // 创建时间

  @@map("exams")
}

model question {
  id       String   @id @unique @default(uuid())
  title    String   @default("")
  choices  String[]
  options  Option[]
  answer   Int
  tag      String   @default("frontend")
  createAt DateTime @default(now()) @map("create_at")
  updateAt DateTime @updatedAt @map("update_at")

  @@map("questions")
}

model Option {
  id         String    @id @unique @default(uuid())
  text       String
  question   question? @relation(fields: [questionId], references: [id])
  questionId String?
  createAt   DateTime  @default(now()) @map("create_at")
  updateAt   DateTime  @updatedAt @map("update_at")

  @@map("options")
}
